{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/ThirdQuestion.js\";\n\nimport IP from \"../config.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport db from \"../DB/DB\";\nimport PlaylistDB from \"../DB/PlaylistDB\";\nimport CustomButton from \"../components/CustomButton\";\nvar BUTTONS = [{\n  text: '😢'\n}, {\n  text: '😁'\n}, {\n  text: '😫'\n}, {\n  text: '🤩'\n}];\n\nvar ThirdQuestion = function ThirdQuestion(_ref) {\n  var navigation = _ref.navigation,\n      preferences = _ref.preferences,\n      setRunningRoute = _ref.setRunningRoute,\n      setPlaylist = _ref.setPlaylist;\n\n  var getRoute = function getRoute(body) {\n    var km = body.km,\n        scenery = body.scenery;\n    var selectedRoute = db.filter(function (route) {\n      return route.km === km && route.scenery === scenery;\n    });\n    setRunningRoute(selectedRoute[0]);\n  };\n\n  var getPlaylist = function getPlaylist(currentMood) {\n    console.log('currentMood', currentMood);\n    var selectedPlaylist = PlaylistDB.filter(function (playlist) {\n      return playlist.name === currentMood;\n    });\n    setPlaylist(selectedPlaylist[0]);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.image,\n    source: require(\"../Pictures/background1.jpg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"How are you feeling?\")), React.createElement(View, {\n    style: styles.flatListContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    horizontal: false,\n    numColumns: 2,\n    data: BUTTONS,\n    keyExtractor: function keyExtractor(item) {\n      return item.text;\n    },\n    scrollEnabled: false,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(CustomButton, {\n        text: item.text,\n        handlePress: function handlePress() {\n          getRoute(preferences);\n          getPlaylist(item.text);\n          navigation.navigate('FinalScreen');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    height: '100%',\n    width: '100%',\n    opacity: 0.9,\n    alignItems: 'center'\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 40,\n    textAlign: 'center'\n  },\n  container: {\n    flex: 1\n  },\n  textContainer: {\n    backgroundColor: 'rgba(255,255,255,0.7)',\n    height: 200,\n    width: 350,\n    marginTop: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 20\n  },\n  flatListContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 90\n  }\n});\nexport default ThirdQuestion;","map":{"version":3,"sources":["/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/ThirdQuestion.js"],"names":["IP","React","db","PlaylistDB","CustomButton","BUTTONS","text","ThirdQuestion","navigation","preferences","setRunningRoute","setPlaylist","getRoute","body","km","scenery","selectedRoute","filter","route","getPlaylist","currentMood","console","log","selectedPlaylist","playlist","name","styles","container","image","require","textContainer","headerText","flatListContainer","item","navigate","StyleSheet","create","flex","resizeMode","height","width","opacity","alignItems","fontWeight","fontSize","textAlign","backgroundColor","marginTop","justifyContent","padding","borderRadius"],"mappings":";;;AAAA,OAAOA,EAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AASA,OAAOC,EAAP;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,IAAI,EAAE;AADR,CADc,EAId;AACEA,EAAAA,IAAI,EAAE;AADR,CAJc,EAOd;AACEA,EAAAA,IAAI,EAAE;AADR,CAPc,EAUd;AACEA,EAAAA,IAAI,EAAE;AADR,CAVc,CAAhB;;AAeA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAKhB;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,WACI,QADJA,WACI;;AACJ,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AAAA,QACjBC,EADiB,GACDD,IADC,CACjBC,EADiB;AAAA,QACbC,OADa,GACDF,IADC,CACbE,OADa;AAGzB,QAAMC,aAAa,GAAGd,EAAE,CAACe,MAAH,CAAU,UAACC,KAAD,EAAW;AACzC,aAAOA,KAAK,CAACJ,EAAN,KAAaA,EAAb,IAAmBI,KAAK,CAACH,OAAN,KAAkBA,OAA5C;AACD,KAFqB,CAAtB;AAGAL,IAAAA,eAAe,CAACM,aAAa,CAAC,CAAD,CAAd,CAAf;AACD,GAPD;;AASA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD,EAAiB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,WAA3B;AACA,QAAMG,gBAAgB,GAAGpB,UAAU,CAACc,MAAX,CAAkB,UAACO,QAAD,EAAc;AACvD,aAAOA,QAAQ,CAACC,IAAT,KAAkBL,WAAzB;AACD,KAFwB,CAAzB;AAGAT,IAAAA,WAAW,CAACY,gBAAgB,CAAC,CAAD,CAAjB,CAAX;AACD,GAND;;AAoBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,IAAA,MAAM,EAAEC,OAAO,+BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,KADd;AAEE,IAAA,UAAU,EAAE,CAFd;AAGE,IAAA,IAAI,EAAE3B,OAHR;AAIE,IAAA,YAAY,EAAE,sBAAC4B,IAAD;AAAA,aAAUA,IAAI,CAAC3B,IAAf;AAAA,KAJhB;AAKE,IAAA,aAAa,EAAE,KALjB;AAME,IAAA,UAAU,EAAE;AAAA,UAAG2B,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEA,IAAI,CAAC3B,IADb;AAEE,QAAA,WAAW,EAAE,uBAAM;AACjBM,UAAAA,QAAQ,CAACH,WAAD,CAAR;AACAU,UAAAA,WAAW,CAACc,IAAI,CAAC3B,IAAN,CAAX;AACAE,UAAAA,UAAU,CAAC0B,QAAX,CAAoB,aAApB;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF;AA+BD,CAlED;;AAoEA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,UAAU,EAAE,OAFP;AAGLC,IAAAA,MAAM,EAAE,MAHH;AAILC,IAAAA,KAAK,EAAE,MAJF;AAKLC,IAAAA,OAAO,EAAE,GALJ;AAMLC,IAAAA,UAAU,EAAE;AANP,GADwB;AAS/BX,EAAAA,UAAU,EAAE;AACVY,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,SAAS,EAAE;AAHD,GATmB;AAc/BlB,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE;AADG,GAdoB;AAkB/BP,EAAAA,aAAa,EAAE;AACbgB,IAAAA,eAAe,EAAE,uBADJ;AAEbP,IAAAA,MAAM,EAAE,GAFK;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbO,IAAAA,SAAS,EAAE,EAJE;AAKbC,IAAAA,cAAc,EAAE,QALH;AAMbN,IAAAA,UAAU,EAAE,QANC;AAObO,IAAAA,OAAO,EAAE,EAPI;AAQbC,IAAAA,YAAY,EAAE;AARD,GAlBgB;AA6B/BlB,EAAAA,iBAAiB,EAAE;AACjBgB,IAAAA,cAAc,EAAE,QADC;AAEjBN,IAAAA,UAAU,EAAE,QAFK;AAGjBK,IAAAA,SAAS,EAAE;AAHM;AA7BY,CAAlB,CAAf;AAoCA,eAAexC,aAAf","sourcesContent":["import IP from '../config.js';\nimport React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  FlatList,\n  ImageBackground,\n} from 'react-native';\nimport db from '../DB/DB';\nimport PlaylistDB from '../DB/PlaylistDB';\nimport CustomButton from '../components/CustomButton';\n\nconst BUTTONS = [\n  {\n    text: '😢',\n  },\n  {\n    text: '😁',\n  },\n  {\n    text: '😫',\n  },\n  {\n    text: '🤩',\n  },\n];\n\nconst ThirdQuestion = ({\n  navigation,\n  preferences,\n  setRunningRoute,\n  setPlaylist,\n}) => {\n  const getRoute = (body) => {\n    const { km, scenery } = body;\n\n    const selectedRoute = db.filter((route) => {\n      return route.km === km && route.scenery === scenery;\n    });\n    setRunningRoute(selectedRoute[0]);\n  };\n\n  const getPlaylist = (currentMood) => {\n    console.log('currentMood', currentMood);\n    const selectedPlaylist = PlaylistDB.filter((playlist) => {\n      return playlist.name === currentMood;\n    });\n    setPlaylist(selectedPlaylist[0]);\n  };\n\n  // const getRoute = (body) => {\n  //   const { km, scenery } = body;\n  //   return fetch(`${IP.IP}/${km}/${scenery}`)\n  //     .then((res) => res.json())\n  //     .then((route) => setRouteName(route.routeName))\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // };\n\n  //uncomment when you finish the databse!\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        style={styles.image}\n        source={require('../Pictures/background1.jpg')}\n      >\n        <View style={styles.textContainer}>\n          <Text style={styles.headerText}>How are you feeling?</Text>\n        </View>\n        <View style={styles.flatListContainer}>\n          <FlatList\n            horizontal={false}\n            numColumns={2}\n            data={BUTTONS}\n            keyExtractor={(item) => item.text}\n            scrollEnabled={false}\n            renderItem={({ item }) => (\n              <CustomButton\n                text={item.text}\n                handlePress={() => {\n                  getRoute(preferences);\n                  getPlaylist(item.text);\n                  navigation.navigate('FinalScreen');\n                }}\n              />\n            )}\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    height: '100%',\n    width: '100%',\n    opacity: 0.9,\n    alignItems: 'center',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 40,\n    textAlign: 'center',\n  },\n  container: {\n    flex: 1,\n  },\n\n  textContainer: {\n    backgroundColor: 'rgba(255,255,255,0.7)',\n    height: 200,\n    width: 350,\n    marginTop: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 20,\n  },\n\n  flatListContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 90,\n  },\n});\n\nexport default ThirdQuestion;\n"]},"metadata":{},"sourceType":"module"}