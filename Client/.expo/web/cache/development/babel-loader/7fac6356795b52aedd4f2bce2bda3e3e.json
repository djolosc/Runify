{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport FirstQuestion from \"./screens/FirstQuestion\";\nimport SecondQuestion from \"./screens/SecondQuestion\";\nimport ThirdQuestion from \"./screens/ThirdQuestion\";\nimport FinalScreen from \"./screens/FinalScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState({\n    km: 0,\n    scenery: '',\n    mood: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      preferences = _useState2[0],\n      setPreferences = _useState2[1];\n\n  useEffect(function () {\n    console.log(preferences);\n  }, [preferences]);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"FirstQuestion\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(FirstQuestion, _extends({\n      preferences: preferences,\n      setPreferences: setPreferences\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"SecondQuestion\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(SecondQuestion, _extends({\n      preferences: preferences,\n      setPreferences: setPreferences\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"ThirdQuestion\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(ThirdQuestion, _extends({\n      preferences: preferences,\n      setPreferences: setPreferences\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"FinalScreen\",\n    component: FinalScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/App.js"],"names":["React","useState","useEffect","FirstQuestion","SecondQuestion","ThirdQuestion","FinalScreen","NavigationContainer","createStackNavigator","Stack","App","km","scenery","mood","preferences","setPreferences","console","log","headerShown","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AAEA,eAAe,SAASE,GAAT,GAAe;AAAA;;AAAA,kBACUT,QAAQ,CAAC;AAC7CU,IAAAA,EAAE,EAAE,CADyC;AAE7CC,IAAAA,OAAO,EAAE,EAFoC;AAG7CC,IAAAA,IAAI,EAAE;AAHuC,GAAD,CADlB;AAAA;AAAA,MACrBC,WADqB;AAAA,MACRC,cADQ;;AAM5Bb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,eAAnB;AAAmC,IAAA,OAAO,EAAE;AAAEI,MAAAA,WAAW,EAAE;AAAf,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,KAAD;AAAA,WACC,oBAAC,aAAD;AACE,MAAA,WAAW,EAAEL,WADf;AAEE,MAAA,cAAc,EAAEC;AAFlB,OAGMI,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CADF,EAUE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,OAAO,EAAE;AAAED,MAAAA,WAAW,EAAE;AAAf,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,KAAD;AAAA,WACC,oBAAC,cAAD;AACE,MAAA,WAAW,EAAEL,WADf;AAEE,MAAA,cAAc,EAAEC;AAFlB,OAGMI,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CAVF,EAmBE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,eAAnB;AAAmC,IAAA,OAAO,EAAE;AAAED,MAAAA,WAAW,EAAE;AAAf,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,KAAD;AAAA,WACC,oBAAC,aAAD;AACE,MAAA,WAAW,EAAEL,WADf;AAEE,MAAA,cAAc,EAAEC;AAFlB,OAGMI,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CAnBF,EA4BE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,SAAS,EAAEb,WAFb;AAGE,IAAA,OAAO,EAAE;AAAEY,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,CADF,CADF;AAsCD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport FirstQuestion from './screens/FirstQuestion';\nimport SecondQuestion from './screens/SecondQuestion';\nimport ThirdQuestion from './screens/ThirdQuestion';\nimport FinalScreen from './screens/FinalScreen';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [preferences, setPreferences] = useState({\n    km: 0,\n    scenery: '',\n    mood: '',\n  });\n  useEffect(() => {\n    console.log(preferences);\n  }, [preferences]);\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"FirstQuestion\" options={{ headerShown: false }}>\n          {(props) => (\n            <FirstQuestion\n              preferences={preferences}\n              setPreferences={setPreferences}\n              {...props}\n            />\n          )}\n        </Stack.Screen>\n        <Stack.Screen name=\"SecondQuestion\" options={{ headerShown: false }}>\n          {(props) => (\n            <SecondQuestion\n              preferences={preferences}\n              setPreferences={setPreferences}\n              {...props}\n            />\n          )}\n        </Stack.Screen>\n        <Stack.Screen name=\"ThirdQuestion\" options={{ headerShown: false }}>\n          {(props) => (\n            <ThirdQuestion\n              preferences={preferences}\n              setPreferences={setPreferences}\n              {...props}\n            />\n          )}\n        </Stack.Screen>\n        <Stack.Screen\n          name=\"FinalScreen\"\n          component={FinalScreen}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}