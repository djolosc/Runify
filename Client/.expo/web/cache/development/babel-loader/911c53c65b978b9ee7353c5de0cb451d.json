{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/Home.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CustomButton from \"../components/CustomButton\";\nimport IP from \"../config\";\nimport ChanceFlurries from \"../svg/chanceflurries.svg\";\nimport ChanceSnows from \"../svg/chancesnow.svg\";\nimport ChanceSleet from \"../svg/chancesleet.svg\";\nimport ChanceTstorms from \"../svg/chancetstorms.svg\";\nimport Clear from \"../svg/clear.svg\";\nimport Cloudy from \"../svg/cloudy.svg\";\nimport Flurries from \"../svg/flurries.svg\";\nimport Fog from \"../svg/fog.svg\";\nimport Hazy from \"../svg/hazy.svg\";\nimport MostlyCloudy from \"../svg/mostlycloudy.svg\";\nimport MostlySunny from \"../svg/mostlysunny.svg\";\nimport Rain from \"../svg/rain.svg\";\nimport Sleet from \"../svg/sleet.svg\";\nimport Snow from \"../svg/snow.svg\";\nimport Sunny from \"../svg/sunny.svg\";\nimport Tstorms from \"../svg/tstorms.svg\";\nimport PartlySunny from \"../svg/partlysunny.svg\";\nimport PartlyCloudy from \"../svg/partlycloudy.svg\";\nexport default function Home(_ref) {\n  var totalKilometers = _ref.totalKilometers,\n      navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentWeather = _useState2[0],\n      setCurrentWeather = _useState2[1];\n\n  var getWeather = function getWeather() {\n    return _regeneratorRuntime.async(function getWeather$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=44.81540311468594&lon=20.46147372061345&appid=\" + IP.WEATHER_API_KEY + \"&units=metric\").then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              setCurrentWeather(data);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getWeather();\n    console.log('currentWeather', currentWeather);\n  }, []);\n  var weather = {\n    ChanceFlurries: ChanceFlurries,\n    ChanceSnows: ChanceSnows,\n    ChanceSleet: ChanceSleet,\n    ChanceTstorms: ChanceTstorms,\n    Clear: Clear,\n    Cloudy: Cloudy,\n    Flurries: Flurries,\n    Fog: Fog,\n    Hazy: Hazy,\n    MostlyCloudy: MostlyCloudy,\n    MostlySunny: MostlySunny,\n    Rain: Rain,\n    Sleet: Sleet,\n    Snow: Snow,\n    Sunny: Sunny,\n    Tstorms: Tstorms,\n    PartlySunny: PartlySunny,\n    PartlyCloudy: PartlyCloudy\n  };\n\n  if (currentWeather.weather) {\n    var weatherName = currentWeather.weather[0].main;\n    var WeatherTag = weather[weatherName];\n    console.log(currentWeather);\n    return React.createElement(SafeAreaView, {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.weatherWidget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: 'normal',\n        marginLeft: 12,\n        marginTop: 10,\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Belgrade\"), React.createElement(Text, {\n      style: {\n        fontSize: 45,\n        marginLeft: 11,\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, Math.round(currentWeather.main.temp), \"\\xBA\"), React.createElement(WeatherTag, {\n      style: {\n        height: 30,\n        width: 30,\n        marginLeft: 7\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: {\n        marginLeft: 11,\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, currentWeather.weather[0].description)), React.createElement(View, {\n      style: {\n        marginTop: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: '800',\n        fontSize: 40,\n        marginLeft: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Welcome back, \\u0110or\\u0111e!\"), React.createElement(Text, {\n      style: {\n        fontWeight: '500',\n        fontSize: 20,\n        marginLeft: 15,\n        marginTop: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"So far, you have totally run \", totalKilometers, \"km\")), React.createElement(View, {\n      style: {\n        height: 410,\n        justifyContent: 'flex-end',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('FirstQuestion');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Let's run!\"))));\n  } else {\n    return React.createElement(View, {\n      style: styles.loadingScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  weatherWidget: {\n    alignSelf: 'flex-end',\n    width: 150,\n    height: 150,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    elevation: 1,\n    backgroundColor: 'black',\n    borderRadius: 20,\n    marginRight: 15,\n    marginTop: 10\n  },\n  weatherText: {\n    marginLeft: 11,\n    color: 'white'\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: 'black',\n    height: 70,\n    width: 320,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 2,\n    shadowRadius: 1,\n    elevation: 5\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: 'white'\n  },\n  loadingScreen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/Home.js"],"names":["React","useState","useEffect","CustomButton","IP","ChanceFlurries","ChanceSnows","ChanceSleet","ChanceTstorms","Clear","Cloudy","Flurries","Fog","Hazy","MostlyCloudy","MostlySunny","Rain","Sleet","Snow","Sunny","Tstorms","PartlySunny","PartlyCloudy","Home","totalKilometers","navigation","currentWeather","setCurrentWeather","getWeather","fetch","WEATHER_API_KEY","then","res","json","data","console","log","weather","weatherName","main","WeatherTag","flex","styles","weatherWidget","fontSize","fontWeight","marginLeft","marginTop","color","Math","round","temp","height","width","description","justifyContent","alignItems","button","navigate","buttonText","loadingScreen","StyleSheet","create","alignSelf","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","backgroundColor","borderRadius","marginRight","weatherText","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Text,\n  SafeAreaView,\n  ActivityIndicator,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\n\nimport CustomButton from '../components/CustomButton';\nimport IP from '../config';\n\nimport ChanceFlurries from '../svg/chanceflurries.svg';\nimport ChanceSnows from '../svg/chancesnow.svg';\nimport ChanceSleet from '../svg/chancesleet.svg';\nimport ChanceTstorms from '../svg/chancetstorms.svg';\nimport Clear from '../svg/clear.svg';\nimport Cloudy from '../svg/cloudy.svg';\nimport Flurries from '../svg/flurries.svg';\nimport Fog from '../svg/fog.svg';\nimport Hazy from '../svg/hazy.svg';\nimport MostlyCloudy from '../svg/mostlycloudy.svg';\nimport MostlySunny from '../svg/mostlysunny.svg';\nimport Rain from '../svg/rain.svg';\nimport Sleet from '../svg/sleet.svg';\nimport Snow from '../svg/snow.svg';\nimport Sunny from '../svg/sunny.svg';\nimport Tstorms from '../svg/tstorms.svg';\nimport PartlySunny from '../svg/partlysunny.svg';\nimport PartlyCloudy from '../svg/partlycloudy.svg';\n\nexport default function Home({ totalKilometers, navigation }) {\n  const [currentWeather, setCurrentWeather] = useState({});\n\n  const getWeather = async () => {\n    return fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=44.81540311468594&lon=20.46147372061345&appid=${IP.WEATHER_API_KEY}&units=metric`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setCurrentWeather(data);\n      });\n  };\n\n  useEffect(() => {\n    getWeather();\n    console.log('currentWeather', currentWeather);\n  }, []);\n\n  const weather = {\n    ChanceFlurries: ChanceFlurries,\n    ChanceSnows: ChanceSnows,\n    ChanceSleet: ChanceSleet,\n    ChanceTstorms: ChanceTstorms,\n    Clear: Clear,\n    Cloudy: Cloudy,\n    Flurries: Flurries,\n    Fog: Fog,\n    Hazy: Hazy,\n    MostlyCloudy: MostlyCloudy,\n    MostlySunny: MostlySunny,\n    Rain: Rain,\n    Sleet: Sleet,\n    Snow: Snow,\n    Sunny: Sunny,\n    Tstorms: Tstorms,\n    PartlySunny: PartlySunny,\n    PartlyCloudy: PartlyCloudy,\n  };\n\n  if (currentWeather.weather) {\n    const weatherName = currentWeather.weather[0].main;\n    const WeatherTag = weather[weatherName];\n    console.log(currentWeather);\n\n    return (\n      <SafeAreaView\n        style={{\n          flex: 1,\n        }}\n      >\n        <View style={styles.weatherWidget}>\n          <Text\n            style={{\n              fontSize: 20,\n              fontWeight: 'normal',\n              marginLeft: 12,\n              marginTop: 10,\n              color: 'white',\n            }}\n          >\n            Belgrade\n          </Text>\n          <Text style={{ fontSize: 45, marginLeft: 11, color: 'white' }}>\n            {Math.round(currentWeather.main.temp)}º\n          </Text>\n          <WeatherTag style={{ height: 30, width: 30, marginLeft: 7 }} />\n          <Text style={{ marginLeft: 11, color: 'white' }}>\n            {currentWeather.weather[0].description}\n          </Text>\n        </View>\n\n        <View style={{ marginTop: 15 }}>\n          <Text style={{ fontWeight: '800', fontSize: 40, marginLeft: 15 }}>\n            Welcome back, Đorđe!\n          </Text>\n          <Text\n            style={{\n              fontWeight: '500',\n              fontSize: 20,\n              marginLeft: 15,\n              marginTop: 5,\n            }}\n          >\n            So far, you have totally run {totalKilometers}km\n          </Text>\n        </View>\n        <View\n          style={{\n            height: 410,\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n          }}\n        >\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate('FirstQuestion')}\n          >\n            <Text style={styles.buttonText}>Let's run!</Text>\n          </TouchableOpacity>\n        </View>\n      </SafeAreaView>\n    );\n  } else {\n    return (\n      <View style={styles.loadingScreen}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  weatherWidget: {\n    alignSelf: 'flex-end',\n    width: 150,\n    height: 150,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    elevation: 1,\n    backgroundColor: 'black',\n    borderRadius: 20,\n    marginRight: 15,\n    marginTop: 10,\n  },\n\n  weatherText: {\n    marginLeft: 11,\n    color: 'white',\n  },\n\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: 'black',\n    height: 70,\n    width: 320,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 2,\n    shadowRadius: 1,\n    elevation: 5,\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: 'white',\n  },\n\n  loadingScreen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}