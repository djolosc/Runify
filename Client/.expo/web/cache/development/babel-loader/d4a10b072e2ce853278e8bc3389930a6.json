{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/FinalScreen.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Button } from 'react-native-elements';\nimport Modal from 'react-native-modal';\nimport MapView, { Polyline, Marker } from 'react-native-maps';\nimport CustomButton from \"../components/CustomButton\";\nimport SpotifyIcon from \"../svg/spotify-brands.svg\";\nimport HomeIcon from \"../svg/home-solid.svg\";\nimport PaperPlane from \"../svg/paper-plane-solid.svg\";\n\nvar FinalScreen = function FinalScreen(_ref) {\n  var navigation = _ref.navigation,\n      runningRoute = _ref.runningRoute,\n      playlist = _ref.playlist,\n      setTotalKilometers = _ref.setTotalKilometers;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputValue = _useState4[0],\n      setInputValue = _useState4[1];\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.homeButton,\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: 'Geeza Pro',\n      fontSize: 20,\n      fontWeight: '600',\n      marginTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Home\", ' '), React.createElement(HomeIcon, {\n    style: {\n      height: 20,\n      width: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Enjoy your \", runningRoute.km, \"km run in \", runningRoute.routeName, \" route\"), React.createElement(CustomButton, {\n    text: 'Click here for more info',\n    handlePress: function handlePress() {\n      return setModalVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"How long have you run today?\"), React.createElement(TextInput, {\n    style: {\n      width: 50,\n      height: 30,\n      borderColor: 'gray',\n      borderWidth: 1,\n      borderRadius: 5\n    },\n    onChangeText: function onChangeText(number) {\n      setInputValue(number);\n    },\n    value: inputValue,\n    keyboardType: \"decimal-pad\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: 'black',\n      width: 50,\n      borderRadius: 10\n    },\n    onPress: function onPress() {\n      setTotalKilometers(function (km) {\n        return km = km + parseFloat(inputValue);\n      });\n      setInputValue('');\n      Keyboard.dismiss();\n    },\n    icon: React.createElement(PaperPlane, {\n      style: {\n        height: 15,\n        width: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    initialRegion: runningRoute.initialRegion,\n    style: {\n      width: 300,\n      height: 300\n    },\n    provider: MapView.PROVIDER_GOOGLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Polyline, {\n    coordinates: runningRoute.coordinates,\n    strokeWidth: 3,\n    strokeColor: '#0000FF',\n    geodesic: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(Marker, {\n    coordinate: runningRoute.coordinates[0],\n    title: 'start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.playlist,\n    onPress: function onPress() {\n      Linking.openURL(playlist.url);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 100,\n      height: 100\n    },\n    source: playlist.img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.playlistText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Here's your\", ' ', React.createElement(View, {\n    style: {\n      height: 30,\n      width: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, React.createElement(SpotifyIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), ' ', \"playlist\"))), React.createElement(Modal, {\n    isVisible: isModalVisible,\n    onSwipeComplete: function onSwipeComplete() {\n      return setModalVisible(false);\n    },\n    swipeDirection: \"down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, runningRoute.description)))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1,\n    margin: 5\n  },\n  headerText: {\n    fontWeight: '800',\n    fontSize: 40,\n    textAlign: 'left',\n    fontFamily: 'Geeza Pro'\n  },\n  playlist: {\n    width: 190,\n    height: 120,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  playlistText: {\n    flexWrap: 'wrap',\n    fontSize: 30,\n    marginLeft: 5,\n    fontFamily: 'Geeza Pro'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20\n  },\n  modalView: {\n    fontFamily: 'Geeza Pro',\n    height: 400,\n    width: 300,\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  homeButton: {\n    width: 100,\n    height: 30,\n    flexDirection: 'row',\n    marginLeft: 210,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 2,\n    shadowRadius: 1,\n    elevation: 5,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default FinalScreen;","map":{"version":3,"sources":["/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/FinalScreen.js"],"names":["React","useEffect","useState","Button","Modal","MapView","Polyline","Marker","CustomButton","SpotifyIcon","HomeIcon","PaperPlane","FinalScreen","navigation","runningRoute","playlist","setTotalKilometers","isModalVisible","setModalVisible","inputValue","setInputValue","styles","container","homeButton","navigate","fontFamily","fontSize","fontWeight","marginTop","height","width","headerText","km","routeName","flexDirection","textAlign","borderColor","borderWidth","borderRadius","number","backgroundColor","parseFloat","Keyboard","dismiss","initialRegion","PROVIDER_GOOGLE","coordinates","Linking","openURL","url","img","playlistText","modalContainer","modalView","description","StyleSheet","create","alignItems","justifyContent","flex","margin","flexWrap","marginLeft","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  Linking,\n  Image,\n  TextInput,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Modal from 'react-native-modal';\nimport MapView, { Polyline, Marker } from 'react-native-maps';\nimport CustomButton from '../components/CustomButton';\nimport SpotifyIcon from '../svg/spotify-brands.svg';\nimport HomeIcon from '../svg/home-solid.svg';\nimport PaperPlane from '../svg/paper-plane-solid.svg';\n\nconst FinalScreen = ({\n  navigation,\n  runningRoute,\n  playlist,\n  setTotalKilometers,\n}) => {\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TouchableOpacity\n        style={styles.homeButton}\n        onPress={() => navigation.navigate('Home')}\n      >\n        <Text\n          style={{\n            fontFamily: 'Geeza Pro',\n            fontSize: 20,\n            fontWeight: '600',\n            marginTop: 3,\n          }}\n        >\n          Home{' '}\n        </Text>\n        <HomeIcon style={{ height: 20, width: 20 }} />\n      </TouchableOpacity>\n      <Text style={styles.headerText}>\n        Enjoy your {runningRoute.km}km run in {runningRoute.routeName} route\n      </Text>\n      <CustomButton\n        text={'Click here for more info'}\n        handlePress={() => setModalVisible(true)}\n      />\n\n      <View\n        style={{\n          flexDirection: 'row',\n        }}\n      >\n        <Text style={{ textAlign: 'center' }}>\n          How long have you run today?\n        </Text>\n        <TextInput\n          style={{\n            width: 50,\n            height: 30,\n            borderColor: 'gray',\n            borderWidth: 1,\n            borderRadius: 5,\n          }}\n          onChangeText={(number) => {\n            setInputValue(number);\n          }}\n          value={inputValue}\n          keyboardType=\"decimal-pad\"\n        />\n        <Button\n          buttonStyle={{\n            backgroundColor: 'black',\n            width: 50,\n            borderRadius: 10,\n          }}\n          onPress={() => {\n            setTotalKilometers((km) => {\n              return (km = km + parseFloat(inputValue));\n            });\n            setInputValue('');\n            Keyboard.dismiss();\n          }}\n          icon={<PaperPlane style={{ height: 15, width: 15 }} />}\n        />\n      </View>\n      <View>\n        <MapView\n          initialRegion={runningRoute.initialRegion}\n          style={{ width: 300, height: 300 }}\n          provider={MapView.PROVIDER_GOOGLE}\n        >\n          <Polyline\n            coordinates={runningRoute.coordinates}\n            strokeWidth={3}\n            strokeColor={'#0000FF'}\n            geodesic={true}\n          />\n          <Marker coordinate={runningRoute.coordinates[0]} title={'start'} />\n        </MapView>\n\n        <TouchableOpacity\n          style={styles.playlist}\n          onPress={() => {\n            Linking.openURL(playlist.url);\n          }}\n        >\n          <Image style={{ width: 100, height: 100 }} source={playlist.img} />\n          <Text style={styles.playlistText}>\n            Here's your{' '}\n            {\n              <View style={{ height: 30, width: 30 }}>\n                <SpotifyIcon />\n              </View>\n            }{' '}\n            playlist\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <Modal\n        isVisible={isModalVisible}\n        onSwipeComplete={() => setModalVisible(false)}\n        swipeDirection=\"down\"\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalView}>\n            <Text>{runningRoute.description}</Text>\n          </View>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1,\n    margin: 5,\n  },\n  headerText: {\n    fontWeight: '800',\n    fontSize: 40,\n    textAlign: 'left',\n    fontFamily: 'Geeza Pro',\n  },\n\n  playlist: {\n    width: 190,\n    height: 120,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n\n  playlistText: {\n    flexWrap: 'wrap',\n    fontSize: 30,\n    marginLeft: 5,\n    fontFamily: 'Geeza Pro',\n  },\n\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n  },\n\n  modalView: {\n    fontFamily: 'Geeza Pro',\n    height: 400,\n    width: 300,\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n\n  homeButton: {\n    width: 100,\n    height: 30,\n    flexDirection: 'row',\n    marginLeft: 210,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 2,\n    shadowRadius: 1,\n    elevation: 5,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default FinalScreen;\n"]},"metadata":{},"sourceType":"module"}