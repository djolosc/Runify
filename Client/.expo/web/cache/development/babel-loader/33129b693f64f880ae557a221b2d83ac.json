{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/SecondQuestion.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport CustomButton from \"../components/CustomButton\";\nvar BUTTONS = [{\n  text: 'River Run',\n  scenery: 'River'\n}, {\n  text: 'Forest Run',\n  scenery: 'Forest'\n}, {\n  text: 'Scenic Run',\n  scenery: 'Scenic'\n}, {\n  text: 'City Run',\n  scenery: 'City'\n}];\n\nvar SecondQuestion = function SecondQuestion(_ref) {\n  var navigation = _ref.navigation,\n      preferences = _ref.preferences,\n      setPreferences = _ref.setPreferences;\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Where would you like to run?\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: BUTTONS,\n    keyExtractor: function keyExtractor(item) {\n      return item.text;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(CustomButton, {\n        text: item.text,\n        handlePress: function handlePress() {\n          setPreferences(function (preferences) {\n            return _objectSpread(_objectSpread({}, preferences), {}, {\n              scenery: item.scenery\n            });\n          });\n          navigation.navigate('ThirdQuestion');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 40,\n    textAlign: 'center'\n  },\n  container: {\n    alignItems: 'center'\n  },\n  textContainer: {\n    height: 300,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10\n  }\n});\nexport default SecondQuestion;","map":{"version":3,"sources":["/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/screens/SecondQuestion.js"],"names":["React","useState","useEffect","CustomButton","BUTTONS","text","scenery","SecondQuestion","navigation","preferences","setPreferences","styles","container","textContainer","headerText","item","navigate","StyleSheet","create","fontWeight","fontSize","textAlign","alignItems","height","justifyContent","padding"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAGA,OAAOC,YAAP;AAEA,IAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,IAAI,EAAE,WADR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CADc,EAMd;AACED,EAAAA,IAAI,EAAE,YADR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CANc,EAWd;AACED,EAAAA,IAAI,EAAE,YADR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAXc,EAgBd;AACED,EAAAA,IAAI,EAAE,UADR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAhBc,CAAhB;;AAuBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAiD;AAAA,MAA9CC,UAA8C,QAA9CA,UAA8C;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AACtE,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEV,OADR;AAEE,IAAA,YAAY,EAAE,sBAACW,IAAD;AAAA,aAAUA,IAAI,CAACV,IAAf;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGU,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEA,IAAI,CAACV,IADb;AAEE,QAAA,WAAW,EAAE,uBAAM;AACjBK,UAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,mDACVA,WADU;AAEbH,cAAAA,OAAO,EAAES,IAAI,CAACT;AAFD;AAAA,WAAD,CAAd;AAKAE,UAAAA,UAAU,CAACQ,QAAX,CAAoB,eAApB;AACD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AA0BD,CA3BD;;AA6BA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,UAAU,EAAE;AACVK,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,SAAS,EAAE;AAHD,GADmB;AAM/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,UAAU,EAAE;AADH,GANoB;AAU/BT,EAAAA,aAAa,EAAE;AACbU,IAAAA,MAAM,EAAE,GADK;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbF,IAAAA,UAAU,EAAE,QAHC;AAIbG,IAAAA,OAAO,EAAE;AAJI;AAVgB,CAAlB,CAAf;AAkBA,eAAelB,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, FlatList } from 'react-native';\n\nimport CustomButton from '../components/CustomButton';\n\nconst BUTTONS = [\n  {\n    text: 'River Run',\n\n    scenery: 'River',\n  },\n  {\n    text: 'Forest Run',\n\n    scenery: 'Forest',\n  },\n  {\n    text: 'Scenic Run',\n\n    scenery: 'Scenic',\n  },\n  {\n    text: 'City Run',\n\n    scenery: 'City',\n  },\n];\n\nconst SecondQuestion = ({ navigation, preferences, setPreferences }) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.headerText}>Where would you like to run?</Text>\n      </View>\n      <View>\n        <FlatList\n          data={BUTTONS}\n          keyExtractor={(item) => item.text}\n          renderItem={({ item }) => (\n            <CustomButton\n              text={item.text}\n              handlePress={() => {\n                setPreferences((preferences) => ({\n                  ...preferences,\n                  scenery: item.scenery,\n                }));\n\n                navigation.navigate('ThirdQuestion');\n              }}\n            />\n          )}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 40,\n    textAlign: 'center',\n  },\n  container: {\n    alignItems: 'center',\n  },\n\n  textContainer: {\n    height: 300,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n  },\n});\n\nexport default SecondQuestion;\n"]},"metadata":{},"sourceType":"module"}