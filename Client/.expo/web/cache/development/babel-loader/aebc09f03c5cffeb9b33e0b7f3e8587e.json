{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Home from \"./screens/Home\";\nimport FirstQuestion from \"./screens/FirstQuestion\";\nimport SecondQuestion from \"./screens/SecondQuestion\";\nimport ThirdQuestion from \"./screens/ThirdQuestion\";\nimport FinalScreen from \"./screens/FinalScreen\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nvar initialStatePreference = {\n  km: 0,\n  scenery: ''\n};\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(initialStatePreference),\n      _useState2 = _slicedToArray(_useState, 2),\n      preferences = _useState2[0],\n      setPreferences = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      runningRoute = _useState4[0],\n      setRunningRoute = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playlist = _useState6[0],\n      setPlaylist = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      totalKilometers = _useState8[0],\n      setTotalKilometers = _useState8[1];\n\n  useEffect(function () {\n    console.log(preferences);\n    console.log('route', runningRoute);\n    console.log('playlist', playlist);\n  }, [preferences, runningRoute, playlist]);\n  return React.createElement(SafeAreaProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, function (props) {\n    return React.createElement(Home, _extends({\n      preferences: preferences,\n      setPreferences: setPreferences,\n      totalKilometers: totalKilometers\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"FirstQuestion\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, function (props) {\n    return React.createElement(FirstQuestion, _extends({\n      preferences: preferences,\n      setPreferences: setPreferences\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"SecondQuestion\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, function (props) {\n    return React.createElement(SecondQuestion, _extends({\n      setPreferences: setPreferences\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"ThirdQuestion\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, function (props) {\n    return React.createElement(ThirdQuestion, _extends({\n      preferences: preferences,\n      setRunningRoute: setRunningRoute,\n      setPlaylist: setPlaylist\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"FinalScreen\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, function (props) {\n    return React.createElement(FinalScreen, _extends({\n      runningRoute: runningRoute,\n      playlist: playlist,\n      setTotalKilometers: setTotalKilometers\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }));\n  }))));\n}","map":{"version":3,"sources":["/Users/djolosc/Desktop/SOLO PROJECT/Runify/Client/App.js"],"names":["React","useState","useEffect","Home","FirstQuestion","SecondQuestion","ThirdQuestion","FinalScreen","SafeAreaProvider","NavigationContainer","createStackNavigator","Stack","initialStatePreference","km","scenery","App","preferences","setPreferences","runningRoute","setRunningRoute","playlist","setPlaylist","totalKilometers","setTotalKilometers","console","log","headerShown","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Home from './screens/Home';\nimport FirstQuestion from './screens/FirstQuestion';\nimport SecondQuestion from './screens/SecondQuestion';\nimport ThirdQuestion from './screens/ThirdQuestion';\nimport FinalScreen from './screens/FinalScreen';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\nconst initialStatePreference = { km: 0, scenery: '' };\n\nexport default function App() {\n  const [preferences, setPreferences] = useState(initialStatePreference);\n  const [runningRoute, setRunningRoute] = useState({});\n  const [playlist, setPlaylist] = useState({});\n  const [totalKilometers, setTotalKilometers] = useState(0);\n\n  useEffect(() => {\n    console.log(preferences);\n    console.log('route', runningRoute);\n    console.log('playlist', playlist);\n  }, [preferences, runningRoute, playlist]);\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" options={{ headerShown: false }}>\n            {(props) => (\n              <Home\n                preferences={preferences}\n                setPreferences={setPreferences}\n                totalKilometers={totalKilometers}\n                {...props}\n              />\n            )}\n          </Stack.Screen>\n\n          <Stack.Screen name=\"FirstQuestion\" options={{ headerShown: false }}>\n            {(props) => (\n              <FirstQuestion\n                preferences={preferences}\n                setPreferences={setPreferences}\n                {...props}\n              />\n            )}\n          </Stack.Screen>\n          <Stack.Screen name=\"SecondQuestion\" options={{ headerShown: false }}>\n            {(props) => (\n              <SecondQuestion setPreferences={setPreferences} {...props} />\n            )}\n          </Stack.Screen>\n          <Stack.Screen name=\"ThirdQuestion\" options={{ headerShown: false }}>\n            {(props) => (\n              <ThirdQuestion\n                preferences={preferences}\n                setRunningRoute={setRunningRoute}\n                setPlaylist={setPlaylist}\n                {...props}\n              />\n            )}\n          </Stack.Screen>\n          <Stack.Screen name=\"FinalScreen\" options={{ headerShown: false }}>\n            {(props) => (\n              <FinalScreen\n                runningRoute={runningRoute}\n                playlist={playlist}\n                setTotalKilometers={setTotalKilometers}\n                {...props}\n              />\n            )}\n          </Stack.Screen>\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}